{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodayScheduleScreen = function TodayScheduleScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      recording = _useState2[0],\n      setRecording = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRecording = _useState4[0],\n      setIsRecording = _useState4[1];\n\n  useEffect(function () {\n    Audio.requestPermissionsAsync();\n  }, []);\n\n  var startRecording = function _callee() {\n    var recordingOptions, newRecording;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            recordingOptions = {\n              android: {\n                extension: '.wav',\n                outputFormat: Audio.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT,\n                audioEncoder: Audio.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT,\n                sampleRate: 44100,\n                numberOfChannels: 2,\n                bitRate: 128000\n              },\n              ios: {\n                extension: '.wav',\n                audioQuality: Audio.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\n                sampleRate: 44100,\n                numberOfChannels: 2,\n                bitRate: 128000,\n                linearPCMBitDepth: 16,\n                linearPCMIsBigEndian: false,\n                linearPCMIsFloat: false\n              }\n            };\n            newRecording = new Audio.Recording();\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(newRecording.prepareToRecordAsync(recordingOptions));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(newRecording.startAsync());\n\n          case 7:\n            setRecording(newRecording);\n            setIsRecording(true);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Error starting recording:', _context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var stopRecording = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(recording.stopAndUnloadAsync());\n\n          case 3:\n            setIsRecording(false);\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('Error stopping recording:', _context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: isRecording ? 'Recording...' : 'Press the button to start recording'\n    }), _jsx(Button, {\n      title: isRecording ? 'Stop Recording' : 'Start Recording',\n      onPress: isRecording ? stopRecording : startRecording\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 20\n  }\n});\nexport default TodayScheduleScreen;","map":{"version":3,"names":["React","useState","useEffect","Audio","TodayScheduleScreen","recording","setRecording","isRecording","setIsRecording","requestPermissionsAsync","startRecording","recordingOptions","android","extension","outputFormat","RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT","audioEncoder","RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT","sampleRate","numberOfChannels","bitRate","ios","audioQuality","RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX","linearPCMBitDepth","linearPCMIsBigEndian","linearPCMIsFloat","newRecording","Recording","prepareToRecordAsync","startAsync","console","log","stopRecording","stopAndUnloadAsync","styles","container","text","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","fontSize","marginBottom"],"sources":["/Users/sandeepjain/MemoryLane/screens/TodayScheduleScreen/TodayScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\nconst TodayScheduleScreen = () => {\r\n  const [recording, setRecording] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Audio.requestPermissionsAsync();\r\n  }, []);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const recordingOptions = {\r\n        android: {\r\n          extension: '.wav',\r\n          outputFormat: Audio.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT,\r\n          audioEncoder: Audio.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT,\r\n          sampleRate: 44100,\r\n          numberOfChannels: 2,\r\n          bitRate: 128000,\r\n        },\r\n        ios: {\r\n          extension: '.wav',\r\n          audioQuality: Audio.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\r\n          sampleRate: 44100,\r\n          numberOfChannels: 2,\r\n          bitRate: 128000,\r\n          linearPCMBitDepth: 16,\r\n          linearPCMIsBigEndian: false,\r\n          linearPCMIsFloat: false,\r\n        },\r\n      };\r\n\r\n      const newRecording = new Audio.Recording();\r\n      await newRecording.prepareToRecordAsync(recordingOptions);\r\n      await newRecording.startAsync();\r\n      setRecording(newRecording);\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.log('Error starting recording:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = async () => {\r\n    try {\r\n      await recording.stopAndUnloadAsync();\r\n      setIsRecording(false);\r\n    } catch (error) {\r\n      console.log('Error stopping recording:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>{isRecording ? 'Recording...' : 'Press the button to start recording'}</Text>\r\n      <Button title={isRecording ? 'Stop Recording' : 'Start Recording'} onPress={isRecording ? stopRecording : startRecording} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default TodayScheduleScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,KAAT,QAAsB,SAAtB;;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;EAChC,gBAAkCH,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOI,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAsCL,QAAQ,CAAC,KAAD,CAA9C;EAAA;EAAA,IAAOM,WAAP;EAAA,IAAoBC,cAApB;;EAEAN,SAAS,CAAC,YAAM;IACdC,KAAK,CAACM,uBAAN;EACD,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAMC,cAAc,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAEbC,gBAFa,GAEM;cACvBC,OAAO,EAAE;gBACPC,SAAS,EAAE,MADJ;gBAEPC,YAAY,EAAEX,KAAK,CAACY,8CAFb;gBAGPC,YAAY,EAAEb,KAAK,CAACc,8CAHb;gBAIPC,UAAU,EAAE,KAJL;gBAKPC,gBAAgB,EAAE,CALX;gBAMPC,OAAO,EAAE;cANF,CADc;cASvBC,GAAG,EAAE;gBACHR,SAAS,EAAE,MADR;gBAEHS,YAAY,EAAEnB,KAAK,CAACoB,sCAFjB;gBAGHL,UAAU,EAAE,KAHT;gBAIHC,gBAAgB,EAAE,CAJf;gBAKHC,OAAO,EAAE,MALN;gBAMHI,iBAAiB,EAAE,EANhB;gBAOHC,oBAAoB,EAAE,KAPnB;gBAQHC,gBAAgB,EAAE;cARf;YATkB,CAFN;YAuBbC,YAvBa,GAuBE,IAAIxB,KAAK,CAACyB,SAAV,EAvBF;YAAA;YAAA,iCAwBbD,YAAY,CAACE,oBAAb,CAAkClB,gBAAlC,CAxBa;;UAAA;YAAA;YAAA,iCAyBbgB,YAAY,CAACG,UAAb,EAzBa;;UAAA;YA0BnBxB,YAAY,CAACqB,YAAD,CAAZ;YACAnB,cAAc,CAAC,IAAD,CAAd;YA3BmB;YAAA;;UAAA;YAAA;YAAA;YA6BnBuB,OAAO,CAACC,GAAR,CAAY,2BAAZ;;UA7BmB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAvB;;EAiCA,IAAMC,aAAa,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEZ5B,SAAS,CAAC6B,kBAAV,EAFY;;UAAA;YAGlB1B,cAAc,CAAC,KAAD,CAAd;YAHkB;YAAA;;UAAA;YAAA;YAAA;YAKlBuB,OAAO,CAACC,GAAR,CAAY,2BAAZ;;UALkB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtB;;EASA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,IAApB;MAAA,UAA2B9B,WAAW,GAAG,cAAH,GAAoB;IAA1D,EADF,EAEE,KAAC,MAAD;MAAQ,KAAK,EAAEA,WAAW,GAAG,gBAAH,GAAsB,iBAAhD;MAAmE,OAAO,EAAEA,WAAW,GAAG0B,aAAH,GAAmBvB;IAA1G,EAFF;EAAA,EADF;AAMD,CAxDD;;AA0DA,IAAMyB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,QAHP;IAITC,eAAe,EAAE;EAJR,CADoB;EAO/BN,IAAI,EAAE;IACJO,QAAQ,EAAE,EADN;IAEJC,YAAY,EAAE;EAFV;AAPyB,CAAlB,CAAf;AAaA,eAAezC,mBAAf"},"metadata":{},"sourceType":"module"}