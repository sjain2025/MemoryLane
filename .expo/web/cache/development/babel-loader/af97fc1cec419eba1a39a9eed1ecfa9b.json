{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport Audio1 from \"../../assets/images/audio1.png\";\nimport Audio2 from \"../../assets/images/audio2.png\";\nimport useSpeechToText, { ResultType } from \"../StudentScreen/Hooks\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as React from 'react';\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodayScheduleScreen = function TodayScheduleScreen() {\n  var navigation = useNavigation();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      watch = _useForm.watch;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      recording = _React$useState2[0],\n      setRecording = _React$useState2[1];\n\n  function startRecording() {\n    var _recording;\n\n    return _regeneratorRuntime.async(function startRecording$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('Requesting permissions..');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Audio.requestPermissionsAsync());\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n              allowsRecordingIOS: true,\n              playsInSilentModeIOS: true\n            }));\n\n          case 6:\n            console.log('Starting recording..');\n            _recording = new Audio.Recording();\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(_recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(_recording.startAsync());\n\n          case 12:\n            setRecording(_recording);\n            console.log('Recording started');\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Failed to start recording', _context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  }\n\n  function stopRecording() {\n    var uri;\n    return _regeneratorRuntime.async(function stopRecording$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('Stopping recording..');\n            setRecording(undefined);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(recording.stopAndUnloadAsync());\n\n          case 4:\n            uri = recording.getURI();\n            console.log('Recording stopped and stored at', uri);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ChooseUser');\n  };\n\n  var _useSpeechToText = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    timeout: 3000,\n    googleApiKey: process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    useLegacyResults: false\n  }),\n      error = _useSpeechToText.error,\n      interimResult = _useSpeechToText.interimResult,\n      isRecording = _useSpeechToText.isRecording,\n      results = _useSpeechToText.results,\n      startSpeechToText = _useSpeechToText.startSpeechToText,\n      stopSpeechToText = _useSpeechToText.stopSpeechToText;\n\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true\n            }));\n\n          case 2:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Add an Entry\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Button, {\n      title: recording ? 'Stop Recording' : 'Start Recording',\n      onPress: recording ? stopRecording : startRecording\n    }), _jsxs(\"ul\", {\n      style: {\n        color: \"white\",\n        listStyle: \"none\",\n        fontFamily: \"sans-serif\",\n        fontWeight: \"bold\",\n        fontSize: \"18px\",\n        marginLeft: '-7%',\n        marginTop: '-1%',\n        marginBottom: '2%'\n      },\n      children: [results.map(function (result) {\n        return _jsx(\"li\", {\n          children: result.transcript\n        }, result.timestamp);\n      }), interimResult && _jsx(\"li\", {\n        children: interimResult\n      })]\n    }), _jsx(\"input\", {\n      placeholder: \"Key Phrase\",\n      style: {\n        borderRadius: 25,\n        height: 50,\n        fontSize: 18,\n        width: 350,\n        marginTop: 24,\n        textAlign: 'center',\n        marginBottom: '5%'\n      }\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 300,\n        height: 300,\n        marginBottom: '4%'\n      }\n    }), _jsx(CustomButton, {\n      text: \"Select an Image\",\n      onPress: pickImage,\n      type: \"EXTRATHREE\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Save\",\n      onPress: handleBack,\n      type: \"EXTRATWO\"\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#2B2D42',\n    height: \"max\"\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default TodayScheduleScreen;","map":{"version":3,"names":["useState","useEffect","CustomInput","CustomButton","useNavigation","useForm","Controller","Audio1","Audio2","useSpeechToText","ResultType","ImagePicker","React","Audio","TodayScheduleScreen","navigation","control","watch","image","setImage","recording","setRecording","startRecording","console","log","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","prepareToRecordAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","startAsync","error","stopRecording","undefined","stopAndUnloadAsync","uri","getURI","handleBack","navigate","continuous","crossBrowser","timeout","googleApiKey","process","env","REACT_APP_API_KEY","speechRecognitionProperties","interimResults","useLegacyResults","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","result","cancelled","styles","root","title","color","listStyle","fontFamily","fontWeight","fontSize","marginLeft","marginTop","marginBottom","map","transcript","timestamp","borderRadius","height","width","textAlign","StyleSheet","create","alignItems","padding","backgroundColor","text","text2"],"sources":["/Users/sandeepjain/MemoryLane/screens/TodayScheduleScreen/TodayScheduleScreen.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport { View, Text, Image, StyleSheet, Button, useWindowDimensions, ScrollView, TextInput } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {useForm, Controller} from 'react-hook-form';\r\nimport Audio1 from '../../assets/images/audio1.png';\r\nimport Audio2 from '../../assets/images/audio2.png';\r\nimport useSpeechToText, { ResultType } from '../StudentScreen/Hooks';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport * as React from 'react';\r\nimport { Audio } from 'expo-av';\r\n\r\nconst TodayScheduleScreen = () => {\r\n  const navigation = useNavigation();\r\n  const {control, watch} = useForm();\r\n  const [image, setImage] = useState(null)\r\n\r\n  const [recording, setRecording] = React.useState();\r\n  async function startRecording() {\r\n    try {\r\n      console.log('Requesting permissions..');\r\n      await Audio.requestPermissionsAsync();\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n      }); \r\n      console.log('Starting recording..');\r\n      const recording = new Audio.Recording();\r\n      await recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY);\r\n      await recording.startAsync(); \r\n      setRecording(recording);\r\n      console.log('Recording started');\r\n    } catch (err) {\r\n      console.error('Failed to start recording', err);\r\n    }\r\n  }\r\n  async function stopRecording() {\r\n    console.log('Stopping recording..');\r\n    setRecording(undefined);\r\n    await recording.stopAndUnloadAsync();\r\n    const uri = recording.getURI(); \r\n    console.log('Recording stopped and stored at', uri);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ChooseUser')\r\n  }\r\n\r\n  const {\r\n    error,\r\n    interimResult,\r\n    isRecording,\r\n    results,\r\n    startSpeechToText,\r\n    stopSpeechToText\r\n  } = useSpeechToText({\r\n    continuous: true,\r\n    crossBrowser: true,\r\n    timeout: 3000,\r\n    googleApiKey: process.env.REACT_APP_API_KEY,\r\n    speechRecognitionProperties: { interimResults: true },\r\n    useLegacyResults: false\r\n  });\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes : ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing : true\r\n    })\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br/>\r\n      <Text style={styles.title}>Add an Entry</Text>\r\n      <br/><br/><br/>\r\n      \r\n      <Button\r\n        title={recording ? 'Stop Recording' : 'Start Recording'}\r\n        onPress={recording ? stopRecording : startRecording}\r\n      />\r\n      <ul style={{color: \"white\", listStyle: \"none\", fontFamily: \"sans-serif\", fontWeight: \"bold\", fontSize: \"18px\", marginLeft: '-7%', marginTop: '-1%', marginBottom: '2%'}}>\r\n        {(results).map((result) => (\r\n          <li key={result.timestamp}>{result.transcript}</li>\r\n        ))}\r\n        {interimResult && <li>{interimResult}</li>}\r\n      </ul>\r\n\r\n      <input placeholder=\"Key Phrase\" style={{borderRadius: 25, height: 50, fontSize: 18, width: 350, marginTop: 24, textAlign: 'center', marginBottom: '5%'}}></input>\r\n\r\n      {image && <Image source={{uri: image}} style={{width: 300, height: 300, marginBottom: '4%'}} />}\r\n      <CustomButton text={\"Select an Image\"} onPress={pickImage} type=\"EXTRATHREE\"/>\r\n      <br/><br/>\r\n\r\n      <br/>\r\n      <CustomButton text={\"Save\"} onPress={handleBack} type=\"EXTRATWO\"/>\r\n      <br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n      <br/><br/><br/><br/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#2B2D42',\r\n    height: \"max\",\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default TodayScheduleScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}