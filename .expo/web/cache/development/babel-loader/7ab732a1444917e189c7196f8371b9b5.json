{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm } from 'react-hook-form';\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen() {\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    watch = _useForm.watch;\n  var pwd = watch('password');\n  var confPwd = watch('repeatPassword');\n  var navigation = useNavigation();\n  var em = watch('email');\n  var handleSignUp = function handleSignUp() {\n    if (pwd !== confPwd) {\n      alert(\"Passwords do not match\");\n    } else {\n      auth.createUserWithEmailAndPassword(em, pwd).then(function (userCredentials) {\n        var user = userCredentials.user;\n        console.log(user.em);\n      }).catch(function (error) {\n        if (error.message === \"Firebase: This operation is restricted to administrators only. (auth/admin-restricted-operation).\") {\n          alert(\"All information must be filled in.\");\n        } else if (error.message === \"Firebase: An internal AuthError has occurred. (auth/internal-error).\") {\n          alert(\"Password must be filled out.\");\n        } else if (error.message === \"Firebase: Password should be at least 6 characters (auth/weak-password).\") {\n          alert(\"Password must be at least 6 characters long.\");\n        } else if (error.message === \"Firebase: The email address is already in use by another account. (auth/email-already-in-use).\") {\n          alert(\"The email address you enterred is already in use\");\n        } else if (error.message === \"Firebase: The email address is badly formatted. (auth/invalid-email).\") {\n          alert(\"Email address is not formatted correctly.\");\n        } else {\n          alert(\"Unknown Error\");\n        }\n      });\n    }\n  };\n  var onSignInPressed = function onSignInPressed() {\n    navigation.navigate('SignIn');\n  };\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Create Account\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomInput, {\n      name: \"email\",\n      placeholder: \"Email\",\n      control: control,\n      rules: {\n        required: 'Email is required'\n      }\n    }), _jsx(CustomInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      control: control,\n      secureTextEntry: true,\n      rules: {\n        required: 'Password is required',\n        minLength: {\n          value: 8,\n          message: 'Password should be a minimum of 8 characters long'\n        },\n        maxLength: {\n          value: 24,\n          message: 'Password should be a maximum of 24 characters long'\n        }\n      }\n    }), _jsx(CustomInput, {\n      name: \"repeatPassword\",\n      placeholder: \"Repeat Password\",\n      control: control,\n      secureTextEntry: true,\n      rules: {\n        required: 'Password must be repeated',\n        validate: function validate(value) {\n          return value == pwd || 'Password does not match';\n        }\n      }\n    }), _jsx(CustomButton, {\n      text: \"Register\",\n      onPress: handleSignUp\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Have an account? Sign in\",\n      onPress: onSignInPressed,\n      type: \"TERTIARY\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#364d59',\n    height: \"100%\"\n  },\n  logo: {\n    width: '70%',\n    maxWidth: 300,\n    height: 100\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","useNavigation","useForm","auth","SignUpScreen","control","handleSubmit","watch","pwd","confPwd","navigation","em","handleSignUp","alert","createUserWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","message","onSignInPressed","navigate","styles","root","title","required","minLength","value","maxLength","validate","StyleSheet","create","alignItems","padding","backgroundColor","height","logo","width","maxWidth","fontSize","fontWeight","color"],"sources":["C:/Users/netra/Documents/GitHub/RoutineRemind/screens/SignUpScreen/SignUpScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useForm } from 'react-hook-form';\r\nimport { auth } from '../../firebase';\r\n\r\nconst SignUpScreen = () => {\r\n\r\n  const {control, handleSubmit, watch} = useForm();\r\n  const pwd = watch('password');\r\n  const confPwd = watch('repeatPassword')\r\n  const navigation = useNavigation();\r\n  const em = watch('email');\r\n\r\n  const handleSignUp = () => {\r\n    if (pwd !== confPwd) {\r\n      alert(\"Passwords do not match\");\r\n    } else {\r\n      auth\r\n      .createUserWithEmailAndPassword(em, pwd)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user.em);\r\n      })\r\n      .catch(error => {\r\n        if (error.message === \"Firebase: This operation is restricted to administrators only. (auth/admin-restricted-operation).\") {\r\n          alert(\"All information must be filled in.\");\r\n        } else if (error.message === \"Firebase: An internal AuthError has occurred. (auth/internal-error).\") {\r\n          alert(\"Password must be filled out.\");\r\n        } else if (error.message === \"Firebase: Password should be at least 6 characters (auth/weak-password).\") {\r\n          alert(\"Password must be at least 6 characters long.\");\r\n        } else if (error.message === \"Firebase: The email address is already in use by another account. (auth/email-already-in-use).\") {\r\n          alert(\"The email address you enterred is already in use\")\r\n        } else if (error.message === \"Firebase: The email address is badly formatted. (auth/invalid-email).\") {\r\n          alert(\"Email address is not formatted correctly.\");\r\n        } else {\r\n          alert(\"Unknown Error\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSignInPressed = () => {\r\n    navigation.navigate('SignIn');\r\n  }\r\n\r\n  return (\r\n      <View style = {styles.root}>\r\n        <br/><br/><br/>\r\n        <Text style={styles.title}>Create Account</Text>     \r\n        <br/><br/><br/>\r\n\r\n        <CustomInput\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          control={control}\r\n          rules={{required: 'Email is required'}}\r\n        />\r\n\r\n        <CustomInput\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          control={control}\r\n          secureTextEntry\r\n          rules={{required: 'Password is required', minLength: {value: 8, message: 'Password should be a minimum of 8 characters long'}, maxLength: {value: 24, message: 'Password should be a maximum of 24 characters long'}}}\r\n        />\r\n\r\n        <CustomInput\r\n          name=\"repeatPassword\"\r\n          placeholder=\"Repeat Password\"\r\n          control={control}\r\n          secureTextEntry\r\n          rules={{\r\n            required: 'Password must be repeated',\r\n            validate: value => value == pwd || 'Password does not match',\r\n          }}\r\n        />\r\n\r\n        <CustomButton text=\"Register\" onPress={handleSignUp} />\r\n        <br/><br/><br/><br/>\r\n\r\n        <CustomButton text=\"Have an account? Sign in\" onPress={onSignInPressed} type=\"TERTIARY\" />\r\n\r\n      </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: '#364d59',\r\n      height: \"100%\",\r\n    },\r\n    logo: {\r\n        width: '70%',\r\n        maxWidth: 300,\r\n        height: 100,\r\n    },\r\n    title: {\r\n      fontSize: 36,\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n    },\r\n});\r\n\r\nexport default SignUpScreen;"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAEtC,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,IAAI;AAAyB;AAAA;AAEtC,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;EAEzB,eAAuCF,OAAO,EAAE;IAAzCG,OAAO,YAAPA,OAAO;IAAEC,YAAY,YAAZA,YAAY;IAAEC,KAAK,YAALA,KAAK;EACnC,IAAMC,GAAG,GAAGD,KAAK,CAAC,UAAU,CAAC;EAC7B,IAAME,OAAO,GAAGF,KAAK,CAAC,gBAAgB,CAAC;EACvC,IAAMG,UAAU,GAAGT,aAAa,EAAE;EAClC,IAAMU,EAAE,GAAGJ,KAAK,CAAC,OAAO,CAAC;EAEzB,IAAMK,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB,IAAIJ,GAAG,KAAKC,OAAO,EAAE;MACnBI,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,MAAM;MACLV,IAAI,CACHW,8BAA8B,CAACH,EAAE,EAAEH,GAAG,CAAC,CACvCO,IAAI,CAAC,UAAAC,eAAe,EAAI;QACvB,IAAMC,IAAI,GAAGD,eAAe,CAACC,IAAI;QACjCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACN,EAAE,CAAC;MACtB,CAAC,CAAC,CACDS,KAAK,CAAC,UAAAC,KAAK,EAAI;QACd,IAAIA,KAAK,CAACC,OAAO,KAAK,mGAAmG,EAAE;UACzHT,KAAK,CAAC,oCAAoC,CAAC;QAC7C,CAAC,MAAM,IAAIQ,KAAK,CAACC,OAAO,KAAK,sEAAsE,EAAE;UACnGT,KAAK,CAAC,8BAA8B,CAAC;QACvC,CAAC,MAAM,IAAIQ,KAAK,CAACC,OAAO,KAAK,0EAA0E,EAAE;UACvGT,KAAK,CAAC,8CAA8C,CAAC;QACvD,CAAC,MAAM,IAAIQ,KAAK,CAACC,OAAO,KAAK,gGAAgG,EAAE;UAC7HT,KAAK,CAAC,kDAAkD,CAAC;QAC3D,CAAC,MAAM,IAAIQ,KAAK,CAACC,OAAO,KAAK,uEAAuE,EAAE;UACpGT,KAAK,CAAC,2CAA2C,CAAC;QACpD,CAAC,MAAM;UACLA,KAAK,CAAC,eAAe,CAAC;QACxB;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAMU,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5Bb,UAAU,CAACc,QAAQ,CAAC,QAAQ,CAAC;EAC/B,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAIC,MAAM,CAACC,IAAK;IAAA,WACzB,cAAK,gBAAK,gBAAK,EACf,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA;IAAA,EAAsB,EAChD,cAAK,gBAAK,gBAAK,EAEf,KAAC,WAAW;MACV,IAAI,EAAC,OAAO;MACZ,WAAW,EAAC,OAAO;MACnB,OAAO,EAAEtB,OAAQ;MACjB,KAAK,EAAE;QAACuB,QAAQ,EAAE;MAAmB;IAAE,EACvC,EAEF,KAAC,WAAW;MACV,IAAI,EAAC,UAAU;MACf,WAAW,EAAC,UAAU;MACtB,OAAO,EAAEvB,OAAQ;MACjB,eAAe;MACf,KAAK,EAAE;QAACuB,QAAQ,EAAE,sBAAsB;QAAEC,SAAS,EAAE;UAACC,KAAK,EAAE,CAAC;UAAER,OAAO,EAAE;QAAmD,CAAC;QAAES,SAAS,EAAE;UAACD,KAAK,EAAE,EAAE;UAAER,OAAO,EAAE;QAAoD;MAAC;IAAE,EACtN,EAEF,KAAC,WAAW;MACV,IAAI,EAAC,gBAAgB;MACrB,WAAW,EAAC,iBAAiB;MAC7B,OAAO,EAAEjB,OAAQ;MACjB,eAAe;MACf,KAAK,EAAE;QACLuB,QAAQ,EAAE,2BAA2B;QACrCI,QAAQ,EAAE,kBAAAF,KAAK;UAAA,OAAIA,KAAK,IAAItB,GAAG,IAAI,yBAAyB;QAAA;MAC9D;IAAE,EACF,EAEF,KAAC,YAAY;MAAC,IAAI,EAAC,UAAU;MAAC,OAAO,EAAEI;IAAa,EAAG,EACvD,cAAK,gBAAK,gBAAK,gBAAK,EAEpB,KAAC,YAAY;MAAC,IAAI,EAAC,0BAA0B;MAAC,OAAO,EAAEW,eAAgB;MAAC,IAAI,EAAC;IAAU,EAAG;EAAA,EAErF;AAEb,CAAC;AAED,IAAME,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,IAAI,EAAE;IACJS,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE;EACV,CAAC;EACDC,IAAI,EAAE;IACFC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,GAAG;IACbH,MAAM,EAAE;EACZ,CAAC;EACDX,KAAK,EAAE;IACLe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT;AACJ,CAAC,CAAC;AAEF,eAAexC,YAAY"},"metadata":{},"sourceType":"module"}