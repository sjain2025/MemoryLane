{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { ViewPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from \"./TextTrackType\";\nimport FilterType from \"./FilterType\";\nimport DRMType from \"./DRMType\";\nimport VideoResizeMode from \"./VideoResizeMode.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nexport { TextTrackType, FilterType, DRMType };\n\nvar Video = function (_Component) {\n  _inherits(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      if (isNaN(time)) {\n        throw new Error('Specified time is not a number');\n      }\n\n      if (Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this.save = function _callee(options) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(NativeModules.VideoManager.save(options, findNodeHandle(_this._root)));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      if (!_this.props.audioOnly) {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this._onGetLicense = function (event) {\n      if (_this.props.drm && _this.props.drm.getLicense instanceof Function) {\n        var data = event.nativeEvent;\n\n        if (data && data.spcBase64) {\n          var getLicenseOverride = _this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n\n          var getLicensePromise = Promise.resolve(getLicenseOverride);\n          getLicensePromise.then(function (result) {\n            if (result !== undefined) {\n              NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(_this._root));\n            } else {\n              NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(_this._root));\n            }\n          }).catch(function (error) {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(_this._root));\n          });\n        } else {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(_this._root));\n        }\n      }\n    };\n\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!NativeModules.UIManager.getViewManagerConfig) {\n        return NativeModules.UIManager[viewManagerName];\n      }\n\n      return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n\n    _this.state = {\n      showPoster: !!props.poster\n    };\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case 'object':\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case 'undefined':\n          return '';\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = resolveAssetSource(this.props.source) || {};\n      var shouldCache = !source.__packager_asset;\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n      if (resizeMode === VideoResizeMode.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === VideoResizeMode.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === VideoResizeMode.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n\n      var nativeProps = _extends({}, this.props);\n\n      _extends(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n\n      var posterStyle = _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n\n      return _jsxs(View, {\n        style: nativeProps.style,\n        children: [_jsx(RCTVideo, _objectSpread(_objectSpread({\n          ref: this._assignRoot\n        }, nativeProps), {}, {\n          style: StyleSheet.absoluteFill\n        })), this.state.showPoster && _jsx(Image, {\n          style: posterStyle,\n          source: {\n            uri: this.props.poster\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport { Video as default };\nVideo.propTypes = _objectSpread({\n  filter: PropTypes.oneOf([FilterType.NONE, FilterType.INVERT, FilterType.MONOCHROME, FilterType.POSTERIZE, FilterType.FALSE, FilterType.MAXIMUMCOMPONENT, FilterType.MINIMUMCOMPONENT, FilterType.CHROME, FilterType.FADE, FilterType.INSTANT, FilterType.MONO, FilterType.NOIR, FilterType.PROCESS, FilterType.TONAL, FilterType.TRANSFER, FilterType.SEPIA]),\n  filterEnabled: PropTypes.bool,\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string\n  }), PropTypes.number]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: ImagePropTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  textTracks: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    uri: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([TextTrackType.SRT, TextTrackType.TTML, TextTrackType.VTT]),\n    language: PropTypes.string.isRequired\n  })),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number\n}, ViewPropTypes);\nvar RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","requireNativeComponent","ViewPropTypes","ImagePropTypes","resolveAssetSource","TextTrackType","FilterType","DRMType","VideoResizeMode","styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","findNodeHandle","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","audioOnly","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","_onGetLicense","drm","getLicense","Function","data","spcBase64","getLicenseOverride","contentId","licenseUrl","getLicensePromise","Promise","resolve","then","result","undefined","setLicenseResult","setLicenseError","catch","error","getViewManagerConfig","viewManagerName","UIManager","poster","nativeProps","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","shouldCache","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","onGetLicense","posterStyle","absoluteFillObject","posterResizeMode","absoluteFill","propTypes","filter","oneOf","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","CLEARKEY","FAIRPLAY","WIDEVINE","PLAYREADY","licenseServer","base64Certificate","certificateUrl","minLoadRetryCount","maxBitRate","repeat","automaticallyWaitsToMinimizeStalling","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","preferredForwardBufferDuration","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","RCTVideo","nativeOnly"],"sources":["/Users/sandeepjain/Downloads/RoutineRemind/node_modules/react-native-video/Video.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, requireNativeComponent, NativeModules, View, Image, Platform, findNodeHandle } from 'react-native';\nimport { ViewPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport DRMType from './DRMType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType, DRMType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster,\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  toTypeString(x) {\n    switch (typeof x) {\n      case 'object':\n        return x instanceof Date\n          ? x.toISOString()\n          : JSON.stringify(x); // object, null\n      case 'undefined':\n        return '';\n      default: // boolean, number, string\n        return x.toString();\n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) {throw new Error('Specified time is not a number');}\n\n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance,\n        },\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({ showPoster: false });\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };\n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    if (!this.props.audioOnly) {\n      this._hidePoster();\n    }\n\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n\n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n    if (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  _onGetLicense = (event) => {\n    if (this.props.drm && this.props.drm.getLicense instanceof Function) {\n      const data = event.nativeEvent;\n      if (data && data.spcBase64) {\n        const getLicenseOverride = this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n        const getLicensePromise = Promise.resolve(getLicenseOverride); // Handles both scenarios, getLicenseOverride being a promise and not.\n        getLicensePromise.then((result => {\n          if (result !== undefined) {\n            NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(this._root));\n          } else {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(this._root));\n          }\n        })).catch((error) => {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(this._root));\n        });\n      } else {\n        NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(this._root));\n      }\n    }\n  }\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !source.__packager_asset;\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n\n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {},\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n    FilterType.NONE,\n    FilterType.INVERT,\n    FilterType.MONOCHROME,\n    FilterType.POSTERIZE,\n    FilterType.FALSE,\n    FilterType.MAXIMUMCOMPONENT,\n    FilterType.MINIMUMCOMPONENT,\n    FilterType.CHROME,\n    FilterType.FADE,\n    FilterType.INSTANT,\n    FilterType.MONO,\n    FilterType.NOIR,\n    FilterType.PROCESS,\n    FilterType.TONAL,\n    FilterType.TRANSFER,\n    FilterType.SEPIA,\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number,\n  ]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([\n      DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY\n    ]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func,\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: ImagePropTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired,\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}