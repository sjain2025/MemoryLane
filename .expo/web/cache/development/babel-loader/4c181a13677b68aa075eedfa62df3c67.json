{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport Audio1 from \"../../assets/images/audio1.png\";\nimport Audio2 from \"../../assets/images/audio2.png\";\nimport useSpeechToText, { ResultType } from \"../StudentScreen/Hooks\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodayScheduleScreen = function TodayScheduleScreen() {\n  var navigation = useNavigation();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      watch = _useForm.watch;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sound = _useState4[0],\n      setSound = _useState4[1];\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ChooseUser');\n  };\n\n  var playSound = function _callee(uri) {\n    var _await$Audio$Sound$cr, sound;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync({\n              uri: uri\n            }));\n\n          case 2:\n            _await$Audio$Sound$cr = _context.sent;\n            sound = _await$Audio$Sound$cr.sound;\n            setSound(sound);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var stopSound = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(sound.stopAsync());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useSpeechToText = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    timeout: 3000,\n    googleApiKey: process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    useLegacyResults: false\n  }),\n      error = _useSpeechToText.error,\n      interimResult = _useSpeechToText.interimResult,\n      isRecording = _useSpeechToText.isRecording,\n      results = _useSpeechToText.results,\n      startSpeechToText = _useSpeechToText.startSpeechToText,\n      stopSpeechToText = _useSpeechToText.stopSpeechToText;\n\n  var pickImage = function _callee3() {\n    var result;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true\n            }));\n\n          case 2:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Add an Entry\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Image, {\n      width: \"300\",\n      height: \"300\",\n      style: {\n        marginTop: '-5%'\n      },\n      source: isRecording ? Audio2 : Audio1,\n      onClick: isRecording ? stopSpeechToText : startSpeechToText\n    }), _jsxs(\"ul\", {\n      style: {\n        color: 'white',\n        listStyle: 'none',\n        fontFamily: 'sans-serif',\n        fontWeight: 'bold',\n        fontSize: '18px',\n        marginLeft: '-7%',\n        marginTop: '-1%',\n        marginBottom: '2%'\n      },\n      children: [results.map(function (result) {\n        return _jsx(\"li\", {\n          children: result.transcript\n        }, result.timestamp);\n      }), interimResult && _jsx(\"li\", {\n        children: interimResult\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Key Phrase\",\n      style: {\n        borderRadius: 25,\n        height: 50,\n        fontSize: 18,\n        width: 350,\n        marginTop: 24,\n        textAlign: 'center',\n        marginBottom: '5%'\n      }\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 300,\n        height: 300,\n        marginBottom: '4%'\n      }\n    }), _jsx(CustomButton, {\n      text: 'Select an Image',\n      onPress: pickImage,\n      type: \"EXTRATHREE\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Save\",\n      onPress: handleBack,\n      type: \"EXTRATWO\"\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#2B2D42',\n    height: \"max\"\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default TodayScheduleScreen;","map":{"version":3,"names":["React","useState","useEffect","CustomInput","CustomButton","useNavigation","useForm","Controller","Audio1","Audio2","useSpeechToText","ResultType","ImagePicker","Audio","TodayScheduleScreen","navigation","control","watch","image","setImage","sound","setSound","handleBack","navigate","playSound","uri","Sound","createAsync","playAsync","stopSound","stopAsync","continuous","crossBrowser","timeout","googleApiKey","process","env","REACT_APP_API_KEY","speechRecognitionProperties","interimResults","useLegacyResults","error","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","result","cancelled","styles","root","title","marginTop","color","listStyle","fontFamily","fontWeight","fontSize","marginLeft","marginBottom","map","transcript","timestamp","borderRadius","height","width","textAlign","StyleSheet","create","alignItems","padding","backgroundColor","text","text2"],"sources":["/Users/sandeepjain/MemoryLane/screens/TodayScheduleScreen/TodayScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Image, StyleSheet, Button, useWindowDimensions, ScrollView, TextInput } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Audio1 from '../../assets/images/audio1.png';\r\nimport Audio2 from '../../assets/images/audio2.png';\r\nimport useSpeechToText, { ResultType } from '../StudentScreen/Hooks';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Audio } from 'expo-av'; // added this import for audio playback\r\n\r\nconst TodayScheduleScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { control, watch } = useForm();\r\n  const [image, setImage] = useState(null);\r\n  const [sound, setSound] = useState(); // added this state for audio playback\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ChooseUser');\r\n  };\r\n\r\n  const playSound = async (uri) => { // added this function for audio playback\r\n    const { sound } = await Audio.Sound.createAsync({ uri });\r\n    setSound(sound);\r\n    await sound.playAsync();\r\n  };\r\n\r\n  const stopSound = async () => { // added this function for audio playback\r\n    await sound.stopAsync();\r\n  };\r\n\r\n  const {\r\n    error,\r\n    interimResult,\r\n    isRecording,\r\n    results,\r\n    startSpeechToText,\r\n    stopSpeechToText,\r\n  } = useSpeechToText({\r\n    continuous: true,\r\n    crossBrowser: true,\r\n    timeout: 3000,\r\n    googleApiKey: process.env.REACT_APP_API_KEY,\r\n    speechRecognitionProperties: { interimResults: true },\r\n    useLegacyResults: false,\r\n  });\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br />\r\n      <Text style={styles.title}>Add an Entry</Text>\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Image\r\n        width=\"300\"\r\n        height=\"300\"\r\n        style={{ marginTop: '-5%' }}\r\n        source={isRecording ? Audio2 : Audio1}\r\n        onClick={isRecording ? stopSpeechToText : startSpeechToText}\r\n      />\r\n      <ul\r\n        style={{\r\n          color: 'white',\r\n          listStyle: 'none',\r\n          fontFamily: 'sans-serif',\r\n          fontWeight: 'bold',\r\n          fontSize: '18px',\r\n          marginLeft: '-7%',\r\n          marginTop: '-1%',\r\n          marginBottom: '2%',\r\n        }}\r\n      >\r\n        {results.map((result) => (\r\n          <li key={result.timestamp}>{result.transcript}</li>\r\n        ))}\r\n        {interimResult && <li>{interimResult}</li>}\r\n      </ul>\r\n\r\n      <TextInput\r\n        placeholder=\"Key Phrase\"\r\n        style={{\r\n          borderRadius: 25,\r\n          height: 50,\r\n          fontSize: 18,\r\n          width: 350,\r\n          marginTop: 24,\r\n          textAlign: 'center',\r\n          marginBottom: '5%',\r\n        }}\r\n      />\r\n\r\n      {image && (\r\n        <Image\r\n          source={{ uri: image }}\r\n          style={{ width: 300, height: 300, marginBottom: '4%' }}\r\n        />\r\n      )}\r\n      <CustomButton text={'Select an Image'} onPress={pickImage} type=\"EXTRATHREE\"/>\r\n      <br/><br/>\r\n\r\n      <br/>\r\n      <CustomButton text={\"Save\"} onPress={handleBack} type=\"EXTRATWO\"/>\r\n      <br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n      <br/><br/><br/><br/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#2B2D42',\r\n    height: \"max\",\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default TodayScheduleScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}