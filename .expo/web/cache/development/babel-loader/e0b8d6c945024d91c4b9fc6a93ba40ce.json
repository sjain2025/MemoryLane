{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport Audio1 from \"../../assets/images/audio1.png\";\nimport Audio2 from \"../../assets/images/audio2.png\";\nimport useSpeechToText, { ResultType } from \"../StudentScreen/Hooks\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar TodayScheduleScreen = function TodayScheduleScreen() {\n  var navigation = useNavigation();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      watch = _useForm.watch;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ChooseUser');\n  };\n\n  var _useSpeechToText = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    timeout: 3000,\n    googleApiKey: process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    useLegacyResults: false\n  }),\n      error = _useSpeechToText.error,\n      interimResult = _useSpeechToText.interimResult,\n      isRecording = _useSpeechToText.isRecording,\n      results = _useSpeechToText.results,\n      startSpeechToText = _useSpeechToText.startSpeechToText,\n      stopSpeechToText = _useSpeechToText.stopSpeechToText;\n\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      recording = _React$useState2[0],\n      setRecording = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      recordings = _React$useState4[0],\n      setRecordings = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      message = _React$useState6[0],\n      setMessage = _React$useState6[1];\n\n  function startRecording() {\n    var permission, _await$Audio$Recordin, _recording;\n\n    return _regeneratorRuntime.async(function startRecording$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Audio.requestPermissionsAsync());\n\n          case 3:\n            permission = _context2.sent;\n\n            if (!(permission.status === \"granted\")) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n              allowsRecordingIOS: true,\n              playsInSilentModeIOS: true\n            }));\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Audio.Recording.createAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY));\n\n          case 9:\n            _await$Audio$Recordin = _context2.sent;\n            _recording = _await$Audio$Recordin.recording;\n            setRecording(_recording);\n            _context2.next = 15;\n            break;\n\n          case 14:\n            setMessage(\"Please grant permission to app to access microphone\");\n\n          case 15:\n            _context2.next = 20;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Failed to start recording', _context2.t0);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  }\n\n  function stopRecording() {\n    var updatedRecordings, _await$recording$crea, sound, status;\n\n    return _regeneratorRuntime.async(function stopRecording$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setRecording(undefined);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(recording.stopAndUnloadAsync());\n\n          case 3:\n            updatedRecordings = _toConsumableArray(recordings);\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(recording.createNewLoadedSoundAsync());\n\n          case 6:\n            _await$recording$crea = _context3.sent;\n            sound = _await$recording$crea.sound;\n            status = _await$recording$crea.status;\n            updatedRecordings.push({\n              sound: sound,\n              duration: getDurationFormatted(status.durationMillis),\n              file: recording.getURI()\n            });\n            setRecordings(updatedRecordings);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getDurationFormatted(millis) {\n    var minutes = millis / 1000 / 60;\n    var minutesDisplay = Math.floor(minutes);\n    var seconds = Math.round((minutes - minutesDisplay) * 60);\n    var secondsDisplay = seconds < 10 ? \"0\" + seconds : seconds;\n    return minutesDisplay + \":\" + secondsDisplay;\n  }\n\n  function getRecordingLines() {\n    return recordings.map(function (recordingLine, index) {\n      return _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(Text, {\n          style: styles.fill,\n          children: [\"Recording \", index + 1, \" - \", recordingLine.duration]\n        }), _jsx(Button, {\n          style: styles.button,\n          onPress: function onPress() {\n            return recordingLine.sound.replayAsync();\n          },\n          title: \"Play\"\n        }), _jsx(Button, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Sharing.shareAsync(recordingLine.file);\n          },\n          title: \"Share\"\n        })]\n      }, index);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Add an Entry\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Text, {\n      children: message\n    }), _jsx(Button, {\n      title: recording ? 'Stop Recording' : 'Start Recording',\n      onPress: recording ? stopRecording : startRecording\n    }), getRecordingLines(), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(\"img\", {\n      width: \"300\",\n      height: \"300\",\n      style: {\n        marginTop: '-5%'\n      },\n      src: isRecording ? Audio2 : Audio1,\n      onClick: isRecording ? stopSpeechToText : startSpeechToText\n    }), _jsxs(\"ul\", {\n      style: {\n        color: \"white\",\n        listStyle: \"none\",\n        fontFamily: \"sans-serif\",\n        fontWeight: \"bold\",\n        fontSize: \"18px\",\n        marginLeft: '-7%',\n        marginTop: '-1%',\n        marginBottom: '2%'\n      },\n      children: [results.map(function (result) {\n        return _jsx(\"li\", {\n          children: result.transcript\n        }, result.timestamp);\n      }), interimResult && _jsx(\"li\", {\n        children: interimResult\n      })]\n    }), _jsx(\"input\", {\n      placeholder: \"Key Phrase\",\n      style: {\n        borderRadius: 25,\n        height: 50,\n        fontSize: 18,\n        width: 250,\n        marginTop: 24,\n        textAlign: 'center',\n        marginBottom: '5%'\n      }\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 300,\n        height: 300,\n        marginBottom: '4%'\n      }\n    }), _jsx(CustomButton, {\n      text: \"Select an Image\",\n      onPress: pickImage,\n      type: \"EXTRATHREE\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Save\",\n      onPress: handleBack,\n      type: \"EXTRATWO\"\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#2B2D42',\n    height: \"max\"\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default TodayScheduleScreen;","map":{"version":3,"names":["React","useState","useEffect","CustomInput","CustomButton","useNavigation","useForm","Controller","Audio1","Audio2","useSpeechToText","ResultType","ImagePicker","TodayScheduleScreen","navigation","control","watch","image","setImage","handleBack","navigate","continuous","crossBrowser","timeout","googleApiKey","process","env","REACT_APP_API_KEY","speechRecognitionProperties","interimResults","useLegacyResults","error","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","result","cancelled","uri","recording","setRecording","recordings","setRecordings","message","setMessage","startRecording","Audio","requestPermissionsAsync","permission","status","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","console","stopRecording","undefined","stopAndUnloadAsync","updatedRecordings","createNewLoadedSoundAsync","sound","push","duration","getDurationFormatted","durationMillis","file","getURI","millis","minutes","minutesDisplay","Math","floor","seconds","round","secondsDisplay","getRecordingLines","map","recordingLine","index","styles","row","fill","button","replayAsync","Sharing","shareAsync","root","title","marginTop","color","listStyle","fontFamily","fontWeight","fontSize","marginLeft","marginBottom","transcript","timestamp","borderRadius","height","width","textAlign","StyleSheet","create","alignItems","padding","backgroundColor","text","text2"],"sources":["/Users/sandeepjain/MemoryLane/screens/TodayScheduleScreen/TodayScheduleScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, Image, StyleSheet, Button, useWindowDimensions, ScrollView, TextInput } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {useForm, Controller} from 'react-hook-form';\r\nimport Audio1 from '../../assets/images/audio1.png';\r\nimport Audio2 from '../../assets/images/audio2.png';\r\nimport useSpeechToText, { ResultType } from '../StudentScreen/Hooks';\r\nimport * as ImagePicker from 'expo-image-picker'\r\n\r\nconst TodayScheduleScreen = () => {\r\n  const navigation = useNavigation();\r\n  const {control, watch} = useForm();\r\n  const [image, setImage] = useState(null)\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ChooseUser')\r\n  }\r\n\r\n  const {\r\n    error,\r\n    interimResult,\r\n    isRecording,\r\n    results,\r\n    startSpeechToText,\r\n    stopSpeechToText\r\n  } = useSpeechToText({\r\n    continuous: true,\r\n    crossBrowser: true,\r\n    timeout: 3000,\r\n    googleApiKey: process.env.REACT_APP_API_KEY,\r\n    speechRecognitionProperties: { interimResults: true },\r\n    useLegacyResults: false\r\n  });\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes : ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing : true\r\n    })\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri)\r\n    }\r\n  }\r\n\r\n  const [recording, setRecording] = React.useState();\r\n  const [recordings, setRecordings] = React.useState([]);\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  async function startRecording() {\r\n    try {\r\n      const permission = await Audio.requestPermissionsAsync();\r\n\r\n      if (permission.status === \"granted\") {\r\n        await Audio.setAudioModeAsync({\r\n          allowsRecordingIOS: true,\r\n          playsInSilentModeIOS: true\r\n        });\r\n        \r\n        const { recording } = await Audio.Recording.createAsync(\r\n          Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\r\n        );\r\n\r\n        setRecording(recording);\r\n      } else {\r\n        setMessage(\"Please grant permission to app to access microphone\");\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to start recording', err);\r\n    }\r\n  }\r\n\r\n  async function stopRecording() {\r\n    setRecording(undefined);\r\n    await recording.stopAndUnloadAsync();\r\n\r\n    let updatedRecordings = [...recordings];\r\n    const { sound, status } = await recording.createNewLoadedSoundAsync();\r\n    updatedRecordings.push({\r\n      sound: sound,\r\n      duration: getDurationFormatted(status.durationMillis),\r\n      file: recording.getURI()\r\n    });\r\n\r\n    setRecordings(updatedRecordings);\r\n  }\r\n\r\n  function getDurationFormatted(millis) {\r\n    const minutes = millis / 1000 / 60;\r\n    const minutesDisplay = Math.floor(minutes);\r\n    const seconds = Math.round((minutes - minutesDisplay) * 60);\r\n    const secondsDisplay = seconds < 10 ? `0${seconds}` : seconds;\r\n    return `${minutesDisplay}:${secondsDisplay}`;\r\n  }\r\n\r\n  function getRecordingLines() {\r\n    return recordings.map((recordingLine, index) => {\r\n      return (\r\n        <View key={index} style={styles.row}>\r\n          <Text style={styles.fill}>Recording {index + 1} - {recordingLine.duration}</Text>\r\n          <Button style={styles.button} onPress={() => recordingLine.sound.replayAsync()} title=\"Play\"></Button>\r\n          <Button style={styles.button} onPress={() => Sharing.shareAsync(recordingLine.file)} title=\"Share\"></Button>\r\n        </View>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br/>\r\n      <Text style={styles.title}>Add an Entry</Text>\r\n      <br/><br/><br/>\r\n      <Text>{message}</Text>\r\n      <Button\r\n        title={recording ? 'Stop Recording' : 'Start Recording'}\r\n        onPress={recording ? stopRecording : startRecording} />\r\n      {getRecordingLines()}\r\n      <StatusBar style=\"auto\" />\r\n      <img width=\"300\" height=\"300\" style={{marginTop: '-5%'}} src={isRecording ? Audio2 : Audio1} onClick={isRecording ? stopSpeechToText : startSpeechToText}/>\r\n      <ul style={{color: \"white\", listStyle: \"none\", fontFamily: \"sans-serif\", fontWeight: \"bold\", fontSize: \"18px\", marginLeft: '-7%', marginTop: '-1%', marginBottom: '2%'}}>\r\n        {(results).map((result) => (\r\n          <li key={result.timestamp}>{result.transcript}</li>\r\n        ))}\r\n        {interimResult && <li>{interimResult}</li>}\r\n      </ul>\r\n\r\n      <input placeholder=\"Key Phrase\" style={{borderRadius: 25, height: 50, fontSize: 18, width: 250, marginTop: 24, textAlign: 'center', marginBottom: '5%'}}></input>\r\n\r\n      {image && <Image source={{uri: image}} style={{width: 300, height: 300, marginBottom: '4%'}} />}\r\n      <CustomButton text={\"Select an Image\"} onPress={pickImage} type=\"EXTRATHREE\"/>\r\n      <br/><br/>\r\n\r\n      <br/>\r\n      <CustomButton text={\"Save\"} onPress={handleBack} type=\"EXTRATWO\"/>\r\n      <br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n      <br/><br/><br/><br/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#2B2D42',\r\n    height: \"max\",\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default TodayScheduleScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}