{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MemoriesScreen = function MemoriesScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDate = _useState2[0],\n      setCurrentDate = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n    setCurrentDate(month + '/' + date);\n    return function () {};\n  }, []);\n\n  var handlePrevious = function handlePrevious() {\n    navigation.navigate('PreviousScheduleScreen');\n  };\n\n  var handleToday = function handleToday() {\n    navigation.navigate('TodayScheduleScreen');\n  };\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ChooseUser');\n  };\n\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"A Memory A Day\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 300,\n        height: 300\n      }\n    }), _jsx(Button, {\n      title: \"Images\",\n      onPress: pickImage\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#2B2D42',\n    height: '100%'\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default MemoriesScreen;","map":{"version":3,"names":["React","useState","useEffect","CustomButton","useNavigation","ImagePicker","MemoriesScreen","currentDate","setCurrentDate","image","setImage","navigation","date","Date","getDate","month","getMonth","year","getFullYear","handlePrevious","navigate","handleToday","handleBack","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","result","cancelled","uri","styles","root","title","width","height","StyleSheet","create","alignItems","padding","backgroundColor","fontSize","fontWeight","color","text","marginTop","text2"],"sources":["/Users/sandeepjain/MemoryLane/screens/MemoriesScreen/MemoriesScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, Button, Image } from 'react-native';\r\nimport CustomButton from '../../components/CustomButton/CustomButton'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport * as ImagePicker from 'expo-image-picker'\r\n\r\nconst MemoriesScreen = () => {\r\n  const [currentDate, setCurrentDate] = useState('')\r\n  const [image, setImage] = useState(null)\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    var date = new Date().getDate()\r\n    var month = new Date().getMonth() + 1\r\n    var year = new Date().getFullYear()\r\n    setCurrentDate(\r\n      month + '/' + date\r\n    )\r\n    return () => {}\r\n  }, [])\r\n\r\n  const handlePrevious = () => {\r\n    navigation.navigate('PreviousScheduleScreen')\r\n  }\r\n\r\n  const handleToday = () => {\r\n    navigation.navigate('TodayScheduleScreen')\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ChooseUser')\r\n  }\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes : ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing : true\r\n    })\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br/>\r\n      <Text style={styles.title}>A Memory A Day</Text>\r\n      <br/><br/><br/>\r\n      {image && <Image source={{uri: image}} style={{width: 300, height: 300}} />}\r\n      <Button title=\"Images\" onPress={pickImage}/>\r\n      <br/><br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#2B2D42',\r\n    height: '100%',\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default MemoriesScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}