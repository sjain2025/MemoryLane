{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Logo from \"../../assets/images/PersonIcon.png\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport MicRecorder from \"mic-recorder-to-mp3\";\nimport { Oval } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport Audio1 from \"../../assets/images/audio1.png\";\nimport Audio2 from \"../../assets/images/audio2.png\";\nimport useSpeechToText, { ResultType } from \"./Hooks\";\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StudentScreen = function StudentScreen() {\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      recording = _React$useState2[0],\n      setRecording = _React$useState2[1];\n\n  function startRecording() {\n    var _recording;\n\n    return _regeneratorRuntime.async(function startRecording$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Audio.requestPermissionsAsync());\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n              allowsRecordingIOS: true,\n              playsInSilentModeIOS: true\n            }));\n\n          case 5:\n            _recording = new Audio.Recording();\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(_recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY));\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(_recording.startAsync());\n\n          case 10:\n            setRecording(_recording);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }\n\n  function stopRecording() {\n    var uri;\n    return _regeneratorRuntime.async(function stopRecording$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setRecording(undefined);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(recording.stopAndunloadAsync());\n\n          case 3:\n            uri = recording.getURI();\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ChooseUser');\n  };\n\n  var _useSpeechToText = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    timeout: 3000,\n    googleApiKey: process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    useLegacyResults: false\n  }),\n      error = _useSpeechToText.error,\n      interimResult = _useSpeechToText.interimResult,\n      isRecording = _useSpeechToText.isRecording,\n      results = _useSpeechToText.results,\n      startSpeechToText = _useSpeechToText.startSpeechToText,\n      stopSpeechToText = _useSpeechToText.stopSpeechToText;\n\n  var handleSubmit = function handleSubmit(error) {\n    navigation.navigate('QuestionScreen');\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Ask a Question\"\n    }), _jsx(\"br\", {}), _jsx(Button, {\n      title: recording ? 'Stop Recording' : 'Start Recording',\n      onPress: recording ? stopRecording : startRecording\n    }), _jsxs(\"ul\", {\n      style: {\n        color: \"white\",\n        listStyle: \"none\",\n        fontFamily: \"sans-serif\",\n        fontWeight: \"bold\",\n        fontSize: \"18px\"\n      },\n      children: [results.map(function (result) {\n        return _jsx(\"li\", {\n          children: result.transcript\n        }, result.timestamp);\n      }), interimResult && _jsx(\"li\", {\n        children: interimResult\n      })]\n    }), _jsx(CustomButton, {\n      text: \"Submit\",\n      onPress: handleSubmit,\n      type: \"EXTRATWO\"\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#2B2D42',\n    height: '140%'\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentScreen;","map":{"version":3,"names":["React","Logo","CustomButton","useNavigation","MicRecorder","Oval","axios","Audio1","Audio2","useSpeechToText","ResultType","Audio","StudentScreen","navigation","useState","recording","setRecording","startRecording","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","prepareToRecordAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","startAsync","console","log","stopRecording","undefined","stopAndunloadAsync","uri","getURI","handleBack","navigate","continuous","crossBrowser","timeout","googleApiKey","process","env","REACT_APP_API_KEY","speechRecognitionProperties","interimResults","useLegacyResults","error","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","handleSubmit","styles","root","title","color","listStyle","fontFamily","fontWeight","fontSize","map","result","transcript","timestamp","StyleSheet","create","alignItems","padding","backgroundColor","height","text","marginTop","text2"],"sources":["/Users/sandeepjain/MemoryLane/screens/StudentScreen/StudentScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, Button } from 'react-native';\r\nimport Logo from '../../assets/images/PersonIcon.png';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport MicRecorder from \"mic-recorder-to-mp3\"\r\nimport { Oval } from \"react-loader-spinner\"\r\nimport axios from \"axios\"\r\nimport Audio1 from '../../assets/images/audio1.png';\r\nimport Audio2 from '../../assets/images/audio2.png';\r\nimport useSpeechToText, { ResultType } from './Hooks';\r\nimport {Audio} from 'expo-av'\r\n\r\nconst StudentScreen = () => {\r\n  const navigation = useNavigation()\r\n  const [recording, setRecording] = React.useState();\r\n\r\n  async function startRecording() {\r\n    try {\r\n      await Audio.requestPermissionsAsync();\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n      })\r\n      const recording = new Audio.Recording()\r\n      await recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY)\r\n      await recording.startAsync()\r\n      setRecording(recording)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  async function stopRecording() {\r\n    setRecording(undefined)\r\n    await recording.stopAndunloadAsync()\r\n    const uri = recording.getURI()\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ChooseUser')\r\n  }\r\n\r\n  const {\r\n    error,\r\n    interimResult,\r\n    isRecording,\r\n    results,\r\n    startSpeechToText,\r\n    stopSpeechToText\r\n  } = useSpeechToText({\r\n    continuous: true,\r\n    crossBrowser: true,\r\n    timeout: 3000,\r\n    googleApiKey: process.env.REACT_APP_API_KEY,\r\n    speechRecognitionProperties: { interimResults: true },\r\n    useLegacyResults: false\r\n  });\r\n\r\n  const handleSubmit = (error) => {\r\n    navigation.navigate('QuestionScreen')\r\n  }\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br/>\r\n      <Text style={styles.title}>Ask a Question</Text>\r\n      <br/>\r\n\r\n      <Button\r\n        title={recording ? 'Stop Recording' : 'Start Recording'}\r\n        onPress = {recording ? stopRecording : startRecording}\r\n      />\r\n\r\n      <ul style={{color: \"white\", listStyle: \"none\", fontFamily: \"sans-serif\", fontWeight: \"bold\", fontSize: \"18px\"}}>\r\n          {(results).map((result) => (\r\n            <li key={result.timestamp}>{result.transcript}</li>\r\n          ))}\r\n          {interimResult && <li>{interimResult}</li>}\r\n      </ul>\r\n      <CustomButton text={\"Submit\"} onPress={handleSubmit} type=\"EXTRATWO\"/>\r\n      <br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n    </View>\r\n  );\r\n}\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#2B2D42',\r\n    height: '140%',\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default StudentScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}