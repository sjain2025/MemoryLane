{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar RNSoundPlayer = NativeModules.RNSoundPlayer;\n\nvar _soundPlayerEmitter = new NativeEventEmitter(RNSoundPlayer);\n\nvar _finishedPlayingListener = null;\nvar _finishedLoadingListener = null;\nexport default {\n  playSoundFile: function playSoundFile(name, type) {\n    RNSoundPlayer.playSoundFile(name, type);\n  },\n  playSoundFileWithDelay: function playSoundFileWithDelay(name, type, delay) {\n    RNSoundPlayer.playSoundFileWithDelay(name, type, delay);\n  },\n  loadSoundFile: function loadSoundFile(name, type) {\n    RNSoundPlayer.loadSoundFile(name, type);\n  },\n  setNumberOfLoops: function setNumberOfLoops(loops) {\n    RNSoundPlayer.setNumberOfLoops(loops);\n  },\n  playUrl: function playUrl(url) {\n    RNSoundPlayer.playUrl(url);\n  },\n  loadUrl: function loadUrl(url) {\n    RNSoundPlayer.loadUrl(url);\n  },\n  onFinishedPlaying: function onFinishedPlaying(callback) {\n    if (_finishedPlayingListener) {\n      _finishedPlayingListener.remove();\n\n      _finishedPlayingListener = undefined;\n    }\n\n    _finishedPlayingListener = _soundPlayerEmitter.addListener(\"FinishedPlaying\", callback);\n  },\n  onFinishedLoading: function onFinishedLoading(callback) {\n    if (_finishedLoadingListener) {\n      _finishedLoadingListener.remove();\n\n      _finishedLoadingListener = undefined;\n    }\n\n    _finishedLoadingListener = _soundPlayerEmitter.addListener(\"FinishedLoading\", callback);\n  },\n  addEventListener: function addEventListener(eventName, callback) {\n    return _soundPlayerEmitter.addListener(eventName, callback);\n  },\n  play: function play() {\n    RNSoundPlayer.resume();\n  },\n  pause: function pause() {\n    RNSoundPlayer.pause();\n  },\n  resume: function resume() {\n    RNSoundPlayer.resume();\n  },\n  stop: function stop() {\n    RNSoundPlayer.stop();\n  },\n  seek: function seek(seconds) {\n    RNSoundPlayer.seek(seconds);\n  },\n  setVolume: function setVolume(volume) {\n    RNSoundPlayer.setVolume(volume);\n  },\n  setSpeaker: function setSpeaker(on) {\n    RNSoundPlayer.setSpeaker(on);\n  },\n  setMixAudio: function setMixAudio(on) {\n    if (Platform.OS === \"android\") {\n      console.log(\"setMixAudio is not implemented on Android\");\n    } else {\n      RNSoundPlayer.setMixAudio(on);\n    }\n  },\n  getInfo: function getInfo() {\n    return _regeneratorRuntime.async(function getInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", RNSoundPlayer.getInfo());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  unmount: function unmount() {\n    if (_finishedPlayingListener) {\n      _finishedPlayingListener.remove();\n\n      _finishedPlayingListener = undefined;\n    }\n\n    if (_finishedLoadingListener) {\n      _finishedLoadingListener.remove();\n\n      _finishedLoadingListener = undefined;\n    }\n  }\n};","map":{"version":3,"names":["RNSoundPlayer","NativeModules","_soundPlayerEmitter","NativeEventEmitter","_finishedPlayingListener","_finishedLoadingListener","playSoundFile","name","type","playSoundFileWithDelay","delay","loadSoundFile","setNumberOfLoops","loops","playUrl","url","loadUrl","onFinishedPlaying","callback","remove","undefined","addListener","onFinishedLoading","addEventListener","eventName","play","resume","pause","stop","seek","seconds","setVolume","volume","setSpeaker","on","setMixAudio","Platform","OS","console","log","getInfo","unmount"],"sources":["/Users/sandeepjain/Downloads/RoutineRemind/node_modules/react-native-sound-player/index.js"],"sourcesContent":["/**\n * @flow\n */\n\"use strict\";\n\nimport { NativeModules, NativeEventEmitter, Platform } from \"react-native\";\nconst { RNSoundPlayer } = NativeModules;\n\nconst _soundPlayerEmitter = new NativeEventEmitter(RNSoundPlayer);\nlet _finishedPlayingListener = null;\nlet _finishedLoadingListener = null;\n\nexport default {\n  playSoundFile: (name: string, type: string) => {\n    RNSoundPlayer.playSoundFile(name, type);\n  },\n\n  playSoundFileWithDelay: (name: string, type: string, delay: number) => {\n    RNSoundPlayer.playSoundFileWithDelay(name, type, delay);\n  },\n\n  loadSoundFile: (name: string, type: string) => {\n    RNSoundPlayer.loadSoundFile(name, type);\n  },\n\n  setNumberOfLoops: (loops: number) => {\n    RNSoundPlayer.setNumberOfLoops(loops);\n  },\n\n  playUrl: (url: string) => {\n    RNSoundPlayer.playUrl(url);\n  },\n\n  loadUrl: (url: string) => {\n    RNSoundPlayer.loadUrl(url);\n  },\n\n  onFinishedPlaying: (callback: (success: boolean) => any) => {\n    if (_finishedPlayingListener) {\n      _finishedPlayingListener.remove();\n      _finishedPlayingListener = undefined;\n    }\n\n    _finishedPlayingListener = _soundPlayerEmitter.addListener(\n      \"FinishedPlaying\",\n      callback\n    );\n  },\n\n  onFinishedLoading: (callback: (success: boolean) => any) => {\n    if (_finishedLoadingListener) {\n      _finishedLoadingListener.remove();\n      _finishedLoadingListener = undefined;\n    }\n\n    _finishedLoadingListener = _soundPlayerEmitter.addListener(\n      \"FinishedLoading\",\n      callback\n    );\n  },\n\n  addEventListener: (\n    eventName:\n      | \"FinishedLoading\"\n      | \"FinishedPlaying\"\n      | \"FinishedLoadingURL\"\n      | \"FinishedLoadingFile\",\n    callback: Function\n  ) => _soundPlayerEmitter.addListener(eventName, callback),\n\n  play: () => {\n    // play and resume has the exact same implementation natively\n    RNSoundPlayer.resume();\n  },\n\n  pause: () => {\n    RNSoundPlayer.pause();\n  },\n\n  resume: () => {\n    RNSoundPlayer.resume();\n  },\n\n  stop: () => {\n    RNSoundPlayer.stop();\n  },\n\n  seek: (seconds: number) => {\n    RNSoundPlayer.seek(seconds);\n  },\n\n  setVolume: (volume: number) => {\n    RNSoundPlayer.setVolume(volume);\n  },\n\n  setSpeaker: (on: boolean) => {\n    RNSoundPlayer.setSpeaker(on);\n  },\n\n  setMixAudio: (on: boolean) => {\n    if (Platform.OS === \"android\") {\n      console.log(\"setMixAudio is not implemented on Android\");\n    } else {\n      RNSoundPlayer.setMixAudio(on);\n    }\n  },\n\n  getInfo: async () => RNSoundPlayer.getInfo(),\n\n  unmount: () => {\n    if (_finishedPlayingListener) {\n      _finishedPlayingListener.remove();\n      _finishedPlayingListener = undefined;\n    }\n\n    if (_finishedLoadingListener) {\n      _finishedLoadingListener.remove();\n      _finishedLoadingListener = undefined;\n    }\n  },\n};\n"],"mappings":"AAGA;;;;;;AAGA,IAAQA,aAAR,GAA0BC,aAA1B,CAAQD,aAAR;;AAEA,IAAME,mBAAmB,GAAG,IAAIC,kBAAJ,CAAuBH,aAAvB,CAA5B;;AACA,IAAII,wBAAwB,GAAG,IAA/B;AACA,IAAIC,wBAAwB,GAAG,IAA/B;AAEA,eAAe;EACbC,aAAa,EAAE,uBAACC,IAAD,EAAeC,IAAf,EAAgC;IAC7CR,aAAa,CAACM,aAAd,CAA4BC,IAA5B,EAAkCC,IAAlC;EACD,CAHY;EAKbC,sBAAsB,EAAE,gCAACF,IAAD,EAAeC,IAAf,EAA6BE,KAA7B,EAA+C;IACrEV,aAAa,CAACS,sBAAd,CAAqCF,IAArC,EAA2CC,IAA3C,EAAiDE,KAAjD;EACD,CAPY;EASbC,aAAa,EAAE,uBAACJ,IAAD,EAAeC,IAAf,EAAgC;IAC7CR,aAAa,CAACW,aAAd,CAA4BJ,IAA5B,EAAkCC,IAAlC;EACD,CAXY;EAabI,gBAAgB,EAAE,0BAACC,KAAD,EAAmB;IACnCb,aAAa,CAACY,gBAAd,CAA+BC,KAA/B;EACD,CAfY;EAiBbC,OAAO,EAAE,iBAACC,GAAD,EAAiB;IACxBf,aAAa,CAACc,OAAd,CAAsBC,GAAtB;EACD,CAnBY;EAqBbC,OAAO,EAAE,iBAACD,GAAD,EAAiB;IACxBf,aAAa,CAACgB,OAAd,CAAsBD,GAAtB;EACD,CAvBY;EAyBbE,iBAAiB,EAAE,2BAACC,QAAD,EAAyC;IAC1D,IAAId,wBAAJ,EAA8B;MAC5BA,wBAAwB,CAACe,MAAzB;;MACAf,wBAAwB,GAAGgB,SAA3B;IACD;;IAEDhB,wBAAwB,GAAGF,mBAAmB,CAACmB,WAApB,CACzB,iBADyB,EAEzBH,QAFyB,CAA3B;EAID,CAnCY;EAqCbI,iBAAiB,EAAE,2BAACJ,QAAD,EAAyC;IAC1D,IAAIb,wBAAJ,EAA8B;MAC5BA,wBAAwB,CAACc,MAAzB;;MACAd,wBAAwB,GAAGe,SAA3B;IACD;;IAEDf,wBAAwB,GAAGH,mBAAmB,CAACmB,WAApB,CACzB,iBADyB,EAEzBH,QAFyB,CAA3B;EAID,CA/CY;EAiDbK,gBAAgB,EAAE,0BAChBC,SADgB,EAMhBN,QANgB;IAAA,OAObhB,mBAAmB,CAACmB,WAApB,CAAgCG,SAAhC,EAA2CN,QAA3C,CAPa;EAAA,CAjDL;EA0DbO,IAAI,EAAE,gBAAM;IAEVzB,aAAa,CAAC0B,MAAd;EACD,CA7DY;EA+DbC,KAAK,EAAE,iBAAM;IACX3B,aAAa,CAAC2B,KAAd;EACD,CAjEY;EAmEbD,MAAM,EAAE,kBAAM;IACZ1B,aAAa,CAAC0B,MAAd;EACD,CArEY;EAuEbE,IAAI,EAAE,gBAAM;IACV5B,aAAa,CAAC4B,IAAd;EACD,CAzEY;EA2EbC,IAAI,EAAE,cAACC,OAAD,EAAqB;IACzB9B,aAAa,CAAC6B,IAAd,CAAmBC,OAAnB;EACD,CA7EY;EA+EbC,SAAS,EAAE,mBAACC,MAAD,EAAoB;IAC7BhC,aAAa,CAAC+B,SAAd,CAAwBC,MAAxB;EACD,CAjFY;EAmFbC,UAAU,EAAE,oBAACC,EAAD,EAAiB;IAC3BlC,aAAa,CAACiC,UAAd,CAAyBC,EAAzB;EACD,CArFY;EAuFbC,WAAW,EAAE,qBAACD,EAAD,EAAiB;IAC5B,IAAIE,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;MAC7BC,OAAO,CAACC,GAAR,CAAY,2CAAZ;IACD,CAFD,MAEO;MACLvC,aAAa,CAACmC,WAAd,CAA0BD,EAA1B;IACD;EACF,CA7FY;EA+FbM,OAAO,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA,iCAAYxC,aAAa,CAACwC,OAAd,EAAZ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CA/FI;EAiGbC,OAAO,EAAE,mBAAM;IACb,IAAIrC,wBAAJ,EAA8B;MAC5BA,wBAAwB,CAACe,MAAzB;;MACAf,wBAAwB,GAAGgB,SAA3B;IACD;;IAED,IAAIf,wBAAJ,EAA8B;MAC5BA,wBAAwB,CAACc,MAAzB;;MACAd,wBAAwB,GAAGe,SAA3B;IACD;EACF;AA3GY,CAAf"},"metadata":{},"sourceType":"module"}